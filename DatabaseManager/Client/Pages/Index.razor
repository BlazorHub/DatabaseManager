@page "/"
@inject IDataSources dataSources
@inject IIndexData indexData
@inject SingletonServices singleton
@inject NavigationManager navigationManager

<div class="jumbotron">
    <h1>Welcome to Database Manager tool</h1>
    <p class="lead">The tool to manage your PPDM databases</p>
</div>



@if (options == null)
{
    <text>Loading...</text>
}
else
{
    <div class="form-group">
        <label for="targetlist">Database Target:</label>
        <select class="form-control" id="targetlist" @onchange="Selected">
            <option selected hidden>Choose Connector</option>
            @foreach (var option in options)
            {
                <option>@option</option>
            }
        </select>
    </div>
}

@if (index == null)
{
    <text>@indexStatus</text>
}
else
{
    <GenericList List="index">
        <WholeListTemplate>
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th></th>
                        <th>Data Type</th>
                        <th>Number Of Data Objects</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in index)
                    {
                        <tr>
                            <td>
                                @*<a class="btn btn-info" href="/indexdata/@item.Id">...</a>*@
                                <button class="btn btn-info" @onclick="@(() => DataTypes(item))">...</button>
                            </td>
                            <td>@item.DataType</td>
                            <td>@item.NumberOfDataObjects</td>
                        </tr>
                    }
                </tbody>
            </table>
        </WholeListTemplate>
    </GenericList>
}

@code {
    private List<string> options { get; set; } = new List<string>();
    private string indexStatus = "No index available";
    public List<ConnectParameters> ConnectParameters;
    public List<DmsIndex> index;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            ConnectParameters = await dataSources.GetSources();
            foreach (ConnectParameters conn in ConnectParameters)
            {
                options.Add(conn.SourceName);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Errors: {ex}");
        }
    }

    private async Task Selected(ChangeEventArgs e)
    {
        indexStatus = "Fetching index";
        StateHasChanged();
        string selectedString = e.Value.ToString();
        singleton.TargetConnector = selectedString;
        await GetIndexData();
    }

    private async Task GetIndexData()
    {
        try
        {
            index = await indexData.GetIndex(singleton.TargetConnector);
        }
        catch (Exception ex)
        {
            index = null;
            Console.WriteLine(ex);
            indexStatus = "No index found";
            StateHasChanged();
        }
    }

    private void DataTypes(DmsIndex item)
    {
        string url = @"/" + item.DataType + @"/" + $"{item.Id}";
        navigationManager.NavigateTo(url);
    }
}
